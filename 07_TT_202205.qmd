---
title: "Revenue and expenditure in sport"
subtitle: "NSC-R Tidy Tuesday May 2022"
date: "2022-03-22"
author: "Alex Trinidad"
format:
    html
---

## Introduction

The dataset for this Tidy Tuesday is about Collegiate Sports in US. Alex Trinidad explores how revenue and expenditure are distributed in sports. He also looks at the differences in sport revenues and expenditures between men and women.\`He presented this on May 3th 2022 in the NSC-R Tidy Tuesday serie. [Here](https://nscrweb.netlify.app/posts/2022-05-03-nsc-r-tidy-tuesday/) you can find the original post [@trinidad_nsc-r_2022]

## Load packages and importing data

```{r}
#| warning: false
#| echo: true
library(tidytuesdayR)
library(tidyverse)
```

Identify TidyTuesday data sets in 2022.

```{r}
#| warning: false
#| echo: true
tidytuesdayR::tt_datasets("2022")
```

Download data set. Note: As list.

```{r}
#| warning: false
#| echo: true
ttdata <- tidytuesdayR::tt_load(x = 2022, week = 13)
```

Select data set of interest.

```{r}
#| warning: false
#| echo: true
sportdt <- ttdata[[1]]
```

Alternative

    sportdt <- ttdata$sports

## Data Exploration

Explore data set

```{r}
#| warning: false
#| echo: true
glimpse(sportdt)
```

Select variables of interest and define chr-variables as fct

```{r}
#| warning: false
#| echo: true
ttdt_selection <- sportdt %>% 
  dplyr::select(year, institution_name, classification_name, partic_men, partic_women,
         ef_male_count, ef_female_count, ef_total_count, rev_men,
         rev_women,total_rev_menwomen, exp_men, exp_women,
         total_exp_menwomen, sports) %>% 
  mutate(year = as.factor(year),
         institution_name = as.factor(institution_name),
         classification_name = as.factor(classification_name),
         sports = as.factor(sports),
         total_par = partic_men + partic_women) 

```

Now we can answer some questions:

*How many years?*

```{r}
#| warning: false
#| echo: true
sum(table(unique(ttdt_selection$year)))
```

Or:

```{r}
#| warning: false
#| echo: true
sum(table(fct_unique(ttdt_selection$year)))
```

*How many divisions?*

```{r}
#| warning: false
#| echo: true
sum(table(unique(ttdt_selection$classification_name)))
```

*How may institutions?*

```{r}
#| warning: false
#| echo: true
sum(table(unique(ttdt_selection$institution_name)))
```

*How many sports?*

```{r}
#| warning: false
#| echo: true
sum(table(unique(ttdt_selection$sports)))
```

*How many cases per wave?*

```{r}
#| warning: false
#| echo: true
ttdt_selection %>% 
  count(year)
```

*How many cases per sport?*

```{r}
#| warning: false
#| echo: true
ttdt_selection %>% 
  count(sports)
```

## Visualizations

Plot measures per sport

```{r}
#| warning: false
#| echo: true
#| label: measures_sport
#| fig-cap: "Proportions in a bar chart"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
ggplot(data = ttdt_selection) +
  geom_bar(mapping = aes(x = sports, color = sports))  +
  theme(legend.position = "none")
```

Plot measures per sport (y axis)

```{r}
#| warning: false
#| echo: true
#| label: measures_sportunordered
#| fig-cap: "Measures per sport"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
ggplot(data = ttdt_selection) + 
  geom_bar(mapping = aes(y = sports, color = sports))
```

Plot measures per sport (y axis ordered infrequent).

```{r}
#| warning: false
#| echo: true
#| label: measures_sportinfrequent
#| fig-cap: "Measures per sport ordered infrequent"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
ggplot(data = ttdt_selection) + 
  geom_bar(mapping = aes(y = fct_infreq(sports), color = sports))
```

Plot measures per sport (y)

```{r}
#| warning: false
#| echo: true
#| label: measures_sportordered2
#| fig-cap: "Measures per sport ordered 2"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
ggplot(data = ttdt_selection) + 
  geom_bar(mapping = aes(y = fct_rev(fct_infreq(sports)), color = sports))
```

Plot measures per sport (y)

```{r}
#| warning: false
#| echo: true
#| label: measures_sportordered3
#| fig-cap: "Measures per sport ordered 3"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
ggplot(data = ttdt_selection) + 
  geom_bar(mapping = aes(y = fct_rev(fct_infreq(sports)), color = sports)) +
  ylab("Sports") 
```

Plot measures per sport (per year)

```{r}
#| warning: false
#| echo: true
#| label: measures_sportwrap
#| fig-cap: "Measures per sport via facet wrap"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
ggplot(data = ttdt_selection) + 
  geom_bar(mapping = aes(y = fct_rev(fct_infreq(sports)), color = sports)) +
  ylab("Sports") +
  facet_wrap(vars(year)) +
  theme(legend.position = "none")
```

## Missing data

Is any NA in any of my variables?

```{r}
#| warning: false
#| echo: true
summary(ttdt_selection)
```

Remove NAs from revenues in men and women.

```{r}
#| warning: false
#| echo: true
myselection <- ttdt_selection %>% 
  filter(!rev_men %in% NA & !rev_women %in% NA)
```

Check if NA's in `myselection` dataset.

```{r}
#| warning: false
#| echo: true
summary(myselection)
```

Alternative way

```{r}
#| warning: false
#| echo: true
table(is.na(myselection))
```

## Revenues and expenditures

Calculate revenues and expenditure per participant and add new variables.

```{r}
#| warning: false
#| echo: true
myselection <- myselection %>% 
  mutate(exp_per_men = exp_men / partic_men,
         exp_per_women = exp_women / partic_women,
         exp_per_total = total_exp_menwomen / total_par, 
         rev_per_men = rev_men / partic_men,
         rev_per_women = rev_women / partic_women,
         rev_per_total = total_rev_menwomen / total_par)
```

**Revenues**

Now look at revenue in sports (Mean revenues per sport). This will not work.

```{r}
rev_mean <- myselection %>% 
  group_by(sports) %>% 
  summarise(mean_rev_total = mean(total_rev_menwomen)) %>% 
      ggplot(aes(x = mean_rev_total, y = sports, color = sports)) +
      geom_bar() +
      labs(x = "Mean Revenues", y = "Sports") 
```

**Get rid of scientific notation**

```{r}
options(scipen = 999)
```

Or activate scientific notation

```{r}
options(scipen = 0)
```

Solution change to stat = "identity" in geom_bar()

```{r}
#| warning: false
#| echo: true
myselection %>% 
  group_by(sports) %>% 
  summarise(mean_rev_total = mean(total_rev_menwomen)) %>% 
  ggplot(aes(x = mean_rev_total, y = sports, color = sports)) +
  geom_bar(stat = "identity") +
  labs(x = "Mean Revenues", y = "Sports") 
```

Ordering bars now

```{r}
#| warning: false
#| echo: true
#| label: revenues_sportordered
#| fig-cap: "Revenues per sport ordered"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
myselection %>% 
  group_by(sports) %>% 
  summarise(mean_rev_total = mean(total_rev_menwomen)) %>% 
  ggplot(aes(x = mean_rev_total, y = fct_rev(fct_infreq(sports)), color = sports)) +
  geom_bar(stat = "identity") +
  labs(x = "Mean Revenues", y = "Sports") 

```

Bars reordered.

```{r}
#| warning: false
#| echo: true
#| label: revenues_sportbarsreordered
#| fig-cap: "Revenues per sport bars reordered"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
myselection %>% 
  group_by(year, sports) %>% 
  summarise(mean_rev_total = mean(total_rev_menwomen)) %>% 
  ggplot(aes(x = mean_rev_total, y = reorder(sports, mean_rev_total),
             color = sports)) +
  geom_bar(stat = "identity") +
  labs(x = "Mean Revenues", y = "Sports") + 
  theme(legend.position = "none") + 
  facet_wrap(vars(year))
```

Plot mean revenues per sport and sex.

```{r}
#| warning: false
#| echo: true
#| label: revenues_sportsex
#| fig-cap: "Revenues per sport and sex"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
myselection %>% 
  group_by(sports) %>% 
  summarise(mean_rev_men = mean(rev_men),
            mean_rev_women = mean(rev_women)) %>% 
  pivot_longer(cols = c(mean_rev_men,mean_rev_women), names_to = "sex",
               values_to = "mean_rev") %>% 
  ggplot(aes(x = mean_rev, y = reorder(sports, mean_rev), fill = sex)) +
  geom_bar(stat = "identity") +
  labs(x = "Mean Revenues", y = "Sports", fill = "Sex") +
  scale_fill_discrete(labels = c("Men", "Women"))
```

```{r}
#| warning: false
#| echo: true
#| label: mean_diff
#| fig-cap: "Mean sex differences in revenues (USD)"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
myselection %>% 
  group_by(sports) %>% 
  summarise(mean_rev_men = mean(rev_men),
            mean_rev_women = mean(rev_women)) %>% 
  mutate(mean_dif = sqrt((mean_rev_men - mean_rev_women) ^ 2)) %>% 
  ggplot(aes(x = mean_dif, y = reorder(sports, mean_dif), fill = mean_dif)) +
  geom_bar(stat = "identity") +
  # facet_wrap(vars(year)) +
  labs(x = "Mean Sex Differences in Revenues (USD)",  y = "Sports", fill = "USD")  

```

**Expenditures in Sport**

Plot mean expenditure

```{r}
#| warning: false
#| echo: true
#| label: exp_sport
#| fig-cap: "Expenditures in sport"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
myselection %>% 
  group_by(sports) %>% 
  summarise(mean_exp_men = mean(exp_men),
            mean_exp_women = mean(exp_women)) %>% 
  pivot_longer(cols = c(mean_exp_men,mean_exp_women), names_to = "sex",
               values_to = "mean_exp") %>% 
  ggplot(aes(x = mean_exp, y = reorder(sports, mean_exp), fill = sex)) +
  geom_bar(stat = "identity") +
  labs(x = "Mean Expenditure", y = "Sports", fill = "Sex") +
  scale_fill_discrete(labels = c("Men", "Women"))
```

Plotting mean differences by sex.

```{r}
#| warning: false
#| echo: true
#| label: meandif_sex
#| fig-cap: "Mean differences by sex"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
myselection %>% 
  group_by(sports) %>% # if facet_wrap, add year
  summarise(mean_exp_men = mean(exp_men),
            mean_exp_women = mean(exp_women)) %>% 
  mutate(mean_dif = sqrt((mean_exp_men - mean_exp_women) ^ 2)) %>% 
  ggplot(aes(x = mean_dif, y = reorder(sports, mean_dif), fill = mean_dif)) +
  geom_bar(stat = "identity") +
  # facet_wrap(vars(year)) +
  labs(x = "Mean Sex Differences (USD)",  y = "Sports", fill = "USD")  

```

If necessary install RColorBrewer package

    # install.packages(RColorBrewer) 

```{r}
#| warning: false
#| echo: true
library(RColorBrewer)
```

Set palettes (display.brewer.all())

```{r}
#| warning: false
#| echo: true
discrete_palettes <- list(
  c("orange", "skyblue"),
  RColorBrewer::brewer.pal(6, "Accent"),
  RColorBrewer::brewer.pal(3, "Set2")
)
```

Calculate mean expenditure per participant & plot.

```{r}
#| warning: false
#| echo: true
#| label: meanexp_participant
#| fig-cap: "Year and institution mean expenditure per participant"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
myselection %>% 
  group_by(sports) %>% 
  summarise(mean_exp_pamen = mean(exp_per_men),
            mean_exp_pawomen = mean(exp_per_women)) %>%  
  pivot_longer(cols = c(mean_exp_pamen,mean_exp_pawomen), names_to = "sex",
               values_to = "mean_exp_pa") %>% 
  ggplot(aes(x = mean_exp_pa, y = reorder(sports, mean_exp_pa), fill = sex)) +
  geom_bar(stat = "identity") +
  labs(x = "Year and Institution Mean Expenditure per Participant",
       y = "Sports", fill = "Sex") +
  scale_fill_discrete(labels = c("Men", "Women"), type = discrete_palettes)
```

Calculate mean expenditure per participant differences and plot

```{r}
#| warning: false
#| echo: true
#| label: meandifsex_participant
#| fig-cap: "Mean Sex Differences Expenditures per Participant (USD)"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
myselection %>% 
  group_by(sports) %>% 
  summarise(mean_exp_pamen = mean(exp_per_men),
            mean_exp_pawomen = mean(exp_per_women)) %>% 
  mutate(mean_pa_dif = sqrt((mean_exp_pamen - mean_exp_pawomen) ^ 2)) %>% 
  ggplot(aes(x = mean_pa_dif, y = reorder(sports, mean_pa_dif), 
             fill = mean_pa_dif)) +
  geom_bar(stat = "identity") +
  # facet_wrap(vars(year)) +
  labs(x = "Mean Sex Differences Expenditures per Participant (USD)", 
       y = "Sports", fill = "USD") +
  scale_fill_continuous( type = "viridis")
```

Compare plots with means: Expenditure "Gross" & per participant

```{r}
#| warning: false
#| echo: true
#| label: sports_sex
#| fig-cap: "Year and Institution Mean Expenditure"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
plotmeanexp <- myselection %>% 
  group_by(sports) %>% 
  summarise(mean_exp_men = mean(exp_men),
            mean_exp_women = mean(exp_women)) %>% 
  pivot_longer(cols = c(mean_exp_men,mean_exp_women), names_to = "sex",
               values_to = "mean_exp") %>% 
  ggplot(aes(x = mean_exp, y = reorder(sports, mean_exp), fill = sex)) +
  geom_bar(stat = "identity") +
  labs(x = "Year and Institution Mean Expenditure", y = "Sports", fill = "Sex") +
  scale_fill_discrete(labels = c("Men", "Women"))
plotmeanexp
```

```{r}
#| warning: false
#| echo: true
#| label: sports_sexdiscrete
#| fig-cap: "Year and Institution Mean Expenditure per Participant"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
plotmeanexp_pa <- myselection %>% 
  group_by(sports) %>% 
  summarise(mean_exp_pamen = mean(exp_per_men),
            mean_exp_pawomen = mean(exp_per_women)) %>%  
  pivot_longer(cols = c(mean_exp_pamen,mean_exp_pawomen), names_to = "sex",
               values_to = "mean_exp_pa") %>% 
  ggplot(aes(x = mean_exp_pa, y = reorder(sports, mean_exp_pa), fill = sex)) +
  geom_bar(stat = "identity") +
  labs(x = "Year and Institution Mean Expenditure per Participant",
       y = "Sports", fill = "Sex") +
  scale_fill_discrete(labels = c("Men", "Women"), type = discrete_palettes)
plotmeanexp_pa
```

```{r}
#| warning: false
#| echo: true
#| label: meansexdif_expenditures
#| fig-cap: "Mean Sex Differences in Expenditures"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
plotmeandifexp <- myselection %>% 
  group_by(sports) %>% # if facet_wrap, add year
  summarise(mean_exp_men = mean(exp_men),
            mean_exp_women = mean(exp_women)) %>% 
  mutate(mean_dif = sqrt((mean_exp_men - mean_exp_women) ^ 2)) %>% 
  ggplot(aes(x = mean_dif, y = reorder(sports, mean_dif), fill = mean_dif)) +
  geom_bar(stat = "identity") +
  # facet_wrap(vars(year)) +
  labs(x = "Mean Sex Differences in Expenditures (USD)",  y = "Sports", fill = "USD")
plotmeandifexp

```

```{r}
#| warning: false
#| echo: true
#| label: meansexdif_expenditures2
#| fig-cap: "Mean Sex Differences Expenditures per Participant (USD)"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
plotmeandifexp_pa <- myselection %>% 
  group_by(sports) %>% 
  summarise(mean_exp_pamen = mean(exp_per_men),
            mean_exp_pawomen = mean(exp_per_women)) %>% 
  mutate(mean_pa_dif = sqrt((mean_exp_pamen - mean_exp_pawomen) ^ 2)) %>% 
  ggplot(aes(x = mean_pa_dif, y = reorder(sports, mean_pa_dif), 
             fill = mean_pa_dif)) +
  geom_bar(stat = "identity") +
  # facet_wrap(vars(year)) +
  labs(x = "Mean Sex Differences Expenditures per Participant (USD)", 
       y = "Sports", fill = "USD") +
  scale_fill_continuous( type = "viridis")
```

If necessary install package

    install.packages("gridExtra")

Load package

```{r}
#| warning: false
#| echo: true
library(gridExtra)
```

Plots together to compare

```{r}
#| warning: false
#| echo: true
#| label: plots_together
#| fig-cap: "Comparing plots"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
gridExtra::grid.arrange(plotmeanexp, plotmeanexp_pa)

gridExtra::grid.arrange(plotmeandifexp, plotmeandifexp_pa)
```

**Relationship between expenditure and revenue**

```{r}
#| warning: false
#| echo: true
#| label: exp_revenue
#| fig-cap: "Relationship expenditure and revenue"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
plotmeandifexp_pa <- myselection %>% 
  group_by(sports) %>% 
  summarise(mean_exp_pamen = mean(exp_per_men),
            mean_exp_pawomen = mean(exp_per_women)) %>% 
  mutate(mean_pa_dif = sqrt((mean_exp_pamen - mean_exp_pawomen) ^ 2)) %>% 
  ggplot(aes(x = mean_pa_dif, y = reorder(sports, mean_pa_dif), 
             fill = mean_pa_dif)) +
  geom_bar(stat = "identity") +
  # facet_wrap(vars(year)) +
  labs(x = "Mean Sex Differences Expenditures per Participant (USD)", 
       y = "Sports", fill = "USD") +
  scale_fill_continuous( type = "viridis")

```

```{r}
#| warning: false
#| echo: true
#| label: dif_revparticipant
#| fig-cap: "Mean Sex Differences Revenues per Participant (USD)"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
plotmeandifrev_pa <- myselection %>% 
  group_by(sports) %>% 
  summarise(mean_rev_pamen = mean(rev_per_men),
            mean_rev_pawomen = mean(rev_per_women)) %>% 
  mutate(mean_parev_dif = sqrt((mean_rev_pamen - mean_rev_pawomen) ^ 2)) %>% 
  ggplot(aes(x = mean_parev_dif, y = reorder(sports, mean_parev_dif), 
             fill = mean_parev_dif)) +
  geom_bar(stat = "identity") +
  # facet_wrap(vars(year)) +
  labs(x = "Mean Sex Differences Revenues per Participant (USD)", 
       y = "Sports", fill = "USD") 
```

Grid plot

```{r}
#| warning: false
#| echo: true
#| label: grid_plot
#| fig-cap: "Grid plots compare"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
gridExtra::grid.arrange(plotmeandifrev_pa, plotmeandifexp_pa)
```

Correlation between Expenditures and Revenues

```{r}
#| warning: false
#| echo: true
cor(myselection$exp_men, myselection$rev_men, method = "spearman")
```

Correlation between exp. and rev. per sport.

```{r}
#| warning: false
#| echo: true
myselection %>% 
  group_by(sports) %>%
  summarise(assoc_exp_rev_men = cor(exp_men, rev_men, method = "spearman"))
```

Plot association

```{r}
#| warning: false
#| echo: true
#| label: plot_association
#| fig-cap: "Plot association"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
myselection %>% 
  group_by(sports) %>%
  ggplot(mapping = aes(x = exp_men, y = rev_men)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  labs(x = "Men Expenditure", 
       y = "Men Revenue", fill = "USD") +
  facet_wrap(vars(sports), scales = "free_y")
```

```{r}
#| warning: false
#| echo: true
#| label: women_exprev
#| fig-cap: "Relationship woman expenditure and revenue"
#| cap-location: margin
#| fig-width: 6
#| fig-height: 4
myselection %>% 
  group_by(sports) %>%
  ggplot(mapping = aes(x = exp_women, y = rev_women)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  labs(x = "Women Expenditure", 
       y = "Women Revenue", fill = "USD") +
  facet_wrap(vars(sports), scales = "free_y")
```


## References
